回归（零散数据拟合曲线）与内插（零散数据补齐相连）


polyfit()                                               %对于离散的点，找出一条关联曲线，并使得误差最小
如：
x=[-1.2 -0.5 0.3 0.9 1.8 2.6 3.0 3.5];
y=[-15.6 -8.5 2.2 4.5 6.6 8.2 8.9 10.0];
fit=polyfit(x,y,1);                                     %polyfit(x,y,num)，x、y为对应的点，num为所需直线的最高次幂，从而得到多项式的系数
%接下来将其可视化
xfit=x(1):0.1:x(end);
yfit=polyval(fit,xfit);
plot(x,y,'ro',xfit,yfit,'b-');
set(gca,'FontSize',14);
legend('date points','best-fit','Location','northwest');


Q1：
temperature与TC output的一组对应数据为：tem=[20 30 40 50 60]   TC=[0.025 0.035 0.050 0.060 0.080]
根据数据找到两者对应关系的一次式，并绘制出图像，图像显示网格，标题为：Calibration of TC。

Ans：
tem=[20 30 40 50 60];
TC=[0.025 0.035 0.050 0.060 0.080];
fit=polyfit(tem,TC,1);
a=fit(1);
b=fit(2);
x=tem(1):0.1:tem(end);
y=polyval(fit,x);
plot(tem,TC,'ro',x,y,'b-');
xlabel('Temperature(\circC)');                           %\circ为上标o
ylabel('TC output(mv)');
title('Calibration of TC');
xticks(tem);
set(gca,'XGrid','on','YGrid','on');


scatter() 与 corrcoef()

对于离散的x，y可以用scatter(x,y)指令来进行绘图。

对于判断x，y对应关系是否强烈，可用corrcoef(x,y)指令来查看，...
corrcoef得到的是矩阵，只要右上角那个数就行,设得到的数为r，则：-1<=r<=1，1为正相关，-1为负相关。

对于x，y的对应关系，用x几次方比较合适呢？，此时可用for语句进行绘图比较，如：
x=[-1.2 -0.5 0.3 0.9 1.8 2.6 3.0 3.5];
y=[-15.6 -8.5 2.2 4.5 6.6 8.2 8.9 10.0];
for i=1:6
    subplot(3,2,i);
    fit=polyfit(x,y,i);
    xfit=x(1):0.1:x(end);
    yfit=polyval(fit,xfit);
    plot(x,y,'ro',xfit,yfit,'b-');
    legend('Date points','Fitted curve','Location','southeast');
end
%由此可以选择多项式次数

是否次数越高，xy的关系越精准呢？
不，当次数过高会导致过拟合，计算量越大，对新样本点的泛化能力会变差。所以可以适当减少采样点，分段拟合。

  
总结：
以上，根据x，y样本点查找关系式，应先用corrcoef指令查看相关性。然后用for语句绘图，查看是几次的多项式较为合适，样本较多则要分段拟合。


regress()
当查找 y 与 x1 和 x2 两个变量的线性关系式时，应使用regress()命令，在三维空间拟合。
例子：
台大视频最后一节27分钟


非线性的关系式要如何拟合呢？

可使用matlab内置的tool box。在命令行输入cftool打开曲线拟合器操作。



内插常用指令：
interp1()                                           %现在更推荐指令griddedInterpolant()，返回内插值。默认直线连接可选择连接方式'linear'、'nearest'、'next'、'previous'、'pchip'、'cubic'、'makima' 或 'spline'
pchip()                                             %
spline()                                            %
mkpp()                                              %

对于零散点x，y，使用上述指令，使f=指令(x,y)，可以补全数据的函数关系式，然后再正常绘图操作。
例1：
hold on
x=[0 0.25 0.75 1.25 1.5 1.75 1.875 2 2.125 2.25];
y=[1.2 1.18 1.1 1 0.92 0.8 0.7 0.55 0.35 0];
f1=griddedInterpolant(x,y,'linear');
f2=griddedInterpolant(x,y,'spline');
xfit=x(1):0.1:x(end);
yfit1=f1(xfit);
yfit2=f2(xfit);
plot(x,y,'ko',xfit,yfit1,'r:',xfit,yfit2,'g--');
legend('Date','Linear','Spline');
title('Date & Fit Model');
hold off

例2：
x=-3:3;
y=[-1 -1 -1 0 1 1 1];
t=-3:0.01:3;
f1=griddedInterpolant(x,y,'spline');
f2=griddedInterpolant(x,y,'pchip');
y1=f1(t);
y2=f2(t);
hold on
plot(x,y,'ro','MarkerFaceColor','r');
plot(t,y1,'g:','LineWidth',2);
plot(t,y2,'b--');
legend('Origin','Spline','Hermite','Location','northwest');
hold off


对于三维，如xyz，...
不能用meshgrid，需使用ndgrid，使f=griddedInterpolant(x,y,z)，即可得到f函数式子，定义xg、yg再ndgrid后，即可使zg=f(xg,yg)，然后绘图。
例：
[x,y]=ndgrid(-2:0.5:2);
z=x.*exp(-x.^2-y.^2);
hold on
plot3(x,y,z,'ro','MarkerFaceColor','r');
surf(x,y,z);
f=griddedInterpolant(x,y,z,'cubic');
[xg,yg]=ndgrid(-2:0.1:2);
zg=f(xg,yg);
surf(xg,yg,zg);
hold off


