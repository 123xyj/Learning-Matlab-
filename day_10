积分与微分


polyval()                                           %多项式函数的构造，poly(a,x)，a为行向量，x次数从高到低的系数，x为的范围。或记为多项式在某个区间的值
如：
%绘制关于f(x)=9x^3-5x^2+3x+7，-2<=x<=5的函数图像
a=[9 -5 3 7];
x=-2:0.1:5;
f=polyval(a,x);
plot(x,f,'LineWidth',2);
xlabel('x');
ylabel('y');
legend('f(x)');

polyder()                                           %多项式微分(derivative)
如：
%对f(x)=5x^4-2x^2+1求微分
a=[5 0 -2 0 1];
a=polyder(a);


Q1:
%polyval和polyder结合
对于函数f(x)=5x^4-2x^2+1，求f'(7)。

Ans：
1.
a=[5 0 -2 0 1];
a=polyder(a);
reply=polyval(a,7);
2.
a=[5 0 -2 0 1];
reply=polyval(polyder(a),7);


conv()                                             %多项式相乘结果的计算，或用来计算卷积的各个部分

u、v分别为两个多项式的系数向量
w=conv(u,v) 就是计算两个多项式函数相乘的所得的函数


Q2：
绘制出关于f(x)=(5x^3-7x^2+5x+10)(4x^2+12x-3)以及其微分在-2<=x<=1的图像。

Ans：
hold on
a=[5 -7 5 10];
b=[4 12 -3];
num=conv(a,b);
x=-2:0.1:1;
f1=polyval(num,x);
f2=polyval(polyder(num),x);
plot(x,f1,'b--','LineWidth',2);
plot(x,f2,'r','LineWidth',2);
xlabel('x');
ylabel('y');
legend('f(x)','f''(x)');                           %此处f''(x)才行
hold off


polyint()                                          %多项式积分
由于积分存在任意常数，所以需要给予常数项
如：
a=[5 0 -2 0 1];
a=polyint(a,3);  %若算$$f(7)，f=polyval(polyint(a,3),7);


非多项式怎么求微分/积分？

diff()                                              %diff(x),计算x内各个元素的差分（即相邻元素相减的值）

diff(x,n,dim)
% x是一个向量或者矩阵
% n为diff命令操作次数（diff(x,2)=diff(diff(x)）
% dim是选择行/列/层相减，1为竖着计算：行相减，2为横着计算：列相减，3为层相减

这样就可以用导数的定义求出f'(x)=diff(y)./diff(x)（y=f(x)）


Q1：
求出y=sinx在x=pi/2时的倒数，x间距取0.1。

Ans：
h=0.1;
x0=pi/2;
x=[x0 x0+h];
y=sin(x);
dy=diff(y)./diff(x);


Q2：
已知f(x)=sin(x)在x=pi/2时f'(pi/2)=0。使用导数的定义，当h从0.1、0.01、...1e-07，记录求出的导数与正确的导数相差多少。

Ans：
h=logspace(-1,-7,7);
x0=pi/2;
error=zeros(1,size(h,2));
for i=1:size(h,2)
x=[x0 x0+h(i)];
y=sin(x);
dy=diff(y)./diff(x);
error(i)=dy-0;
end


Q3：
求出y=sin(x)在x属于[0,2*pi]时候的所有导数，h=0.1，并画出y与dy的图像。

Ans：
h=0.1;
x=0:h:2*pi;
y=sin(x);
dy=diff(y)./diff(x);
plot(x(1:end-1),dy,'r');
line(x,y);
legend('sin''(x)','sin(x)');


Q4：
f(x)=exp(-x).*sin(x.^2/2)，x属于[0,2*pi]，绘制出h=0.1/0.01/0.001三个精度时，f'(x)的图像。

Ans：
hold on
g=colormap(lines);
for i=1:3
    x=0:power(10,-i):2*pi;
    y=exp(-x).*sin(x.^2/2);
    dy=diff(y)./diff(x);
    plot(x(1:end-1),dy,'Color',g(i,:));
end
legend('h=0.1','h=0.01','h=0.001');
xlim([0,2*pi]);
xticks(0:pi/2:2*pi);
set(gca,'XTickLabel',{'0','\pi/2','\pi','3\pi/2','2\pi',});
hold off


Q3：
二阶导怎么算呢？f(x)=x^3，x属于[-2,2]。

Ans：
x=-2:0.1:2;
y=x.^3;
dy=diff(y)./diff(x);
d2y=diff(dy)./diff(x(1:end-1));
plot(x,y,'k',x(1:end-1),dy,'b',x(1:end-2),d2y,'r');
legend('f(x)=x^3','f''(x)=3x^2','f''''(x)=6x','Location','southeast');
xlabel('x');
ylabel('y');
set(gca,'FontSize',18);


积分计算规则有：矩形估计法（midpoint）和梯形估计法（trapezoid）

矩形估计法：将函数按照间隔分为一块块矩形，函数经过矩形的上表面的中点。
如：
h=0.05;
x=0:h:2;
midpoint=(x(1:end-1)+x(2:end))./2;
y=4*midpoint.^3;
inty=sum(h*y);

梯形估计法：将函数按照间隔分为一个个区间，函数在小区间左右值为梯形的两端点。
如：
h=0.05;
x=0:h:2;
trapezoid=(4*x(1:end-1).^3+4*x(2:end).^3)*h/2;
inty=sum(trapezoid);
但是其实matlab内置trapzoid的函数：trapz()
故上述可写为：
h=0.05;
x=0:h:2;
y=4*x.^3;
inty=h*trapz(y);                                         %可知trapz()相当于求出函数在小区间两端点的平均值

此外还有辛普森公式（simpson）：
将函数按照间隔分为一个个区间，设间隔为h，
函数在两个间隔内有三个端点（分别为x0，x1，x2），...
三个函数值（分别为f(x0),f(x1),f(x2)），...
函数在x0到x2的积分为h/3(f(x0)+4*f(x1)+f(x2))。
如：
h=0.05;
x=0:h:2;
y=4*x.^3;
inty=h/3*(y(1)+y(end)+4*sum(y(2:2:end-1))+2*sum(y(3:2:end-2)));
%最为精准！


matlab中：@为取地址
