绘图入门

plot()
1.plot(x,y)
2.plot(y)                 %x=[1...n]，n为y的长度。如：plot(cos(0:pi/20:2*pi))

直接plot一次只能出一个函数图，前面的图像会被后面的图像顶掉。要想一张图出多个函数需要使用hold on/off指令。...
如：
hold on;
plot(cos(0:pi/20:2*pi));
plot(sin(0:pi/20:2*pi));
hold off;
或者一次plot多个函数。

函数颜色需要使用plo(x,y,'str')        %如：plot(cos(0:pi/20:2*pi),'or--') / plot(sin(0:pi/20:2*pi),'xg:')

当需要标注图标时候，使用legend()指令  %legend('name1',''...'nameN')。
x=0:0.5:4*pi;
y=sin(x);
h=cos(x);
w=1./(1+exp(-x));
g=(1/(0.4*(2*pi)^0.5)).*exp(-0.5.*((x-1)./0.4).^2);
plot(x,y,'bd-',x,h,'gp:',x,w,'ro-',x,g,'c^-');
legend('sin(x)','cos(x)','Sigmoid','Gauss functin');


当需要x/y轴时，使用xlabel()/ylabel()/zlabel。
当需要标题时，使用title()。如：
x=0:0.1:2*pi;
y1=sin(x);
y2=exp(-x);
plot(x,y1,'b*-',x,y2,'go:');
legend('sin(x)','e^{-x}');                         %此处大括号{}代表特殊字符
xlabel('0 to 2\pi');                               %\pi代表字符pai
ylabel('value of sin(x) and e^{-x}');
title('Function Plots of sin(x) and e^{-x}');


学习使用latex表示公式！


line()
line不同于plot，不会覆盖原有线条，而是修改或加入线条。line(x,y（,z）)，画出二（三）维图像,xyz输入相应的[起点,终点]。故也可以画出函数图像如：line(x,y)。
line( ,name,value...)，该命令是改变线条属性，如'Color'等。 注：首字母大写
如果已有线条pl，还能用类似struct的方法改变线条属性，如：pl.Color='red'。


annotation()             %注释
annotation('注释类型','x',[起点,终点],'y',[起点，终点])             %起点终点不是坐标，而是比例，整个图为1，坐标分段。也可以手动加箭头。

latex写公式加上arrow注释例子：
x = linspace(0,3);
y = x.^2.*sin(x);
plot(x,y);
line([2,2],[0,2^2*sin(2)]);
str='$$ \int_{0}^{2} x.^2\sin(x) dx $$'
text(0.25,2.5,str,'Interpreter','latex');
annotation('arrow','X',[0.32,0.5],'Y',[0.6,0.4]);


Q1:
绘制有关于f=t^2和g=sin(2*pi*t)的图像t=1 to 2，要求字符符合正常书写，x/y轴注释分别为：Time(ms)和f(t)，图例分别为t^2和sin(2pi t),图像名称为Mini Assignment#1，f为黑色曲线，g为红色的圈。

Ans：
hold on                                                             %此处hold on和hold off可不加
x=linspace(1,2);
f=x.^2;
g=sin(2*pi.*x);
line(x,f,'Color','black');
plot(x,g,'ro');
xlabel('Time(ms)');
ylabel('f(t)');
legend('t^{2}','sin(2\pi t)','Location','northwest');              %legend('','属性','value')，此处和line命令差不多
title('Mini Assignment#1')
hold off


图像窗口的设置可以修改图像。台大第五集，37：00。

gcf是图像窗口（figure），gca是坐标轴（axes），h=plot(x,y)则h是函数。
get()，得到三者的相关属性。

set(name,'property name',value),如：set(gca,'XLim',[0,2*pi])  set(gca,'XTick',0:pi/2:2*pi)  set(gca,'XTickLabel',{'0','\pi/2','pi','3\pi/2','2\pi'})        %此处为设置坐标轴为pi
XTick为实际刻度，XTickLabel为刻度名称。

set(h,name,value...)，此处和line设置一样，例子：set(h,'Color','green','LineWidth','7.0')。

删除曲线为delete()。


Marker为图像中的各个点，其由face color和edge color两种颜色组成。


Q2:
将Q1的图像，f变粗，g的mark face color改为紫色，加大title，加粗坐标轴的字和坐标轴注释。

Ans:
1.直接属性栏修改
2.h1=line(x,f,'Color','black');
h2=plot(x,g,'ro');
set(gca,'FontSize',14);
set(h1,'LineWidth',2.0);
set(h2,'MarkerFaceColor',[0.49,0.18,0.56]);


当需要画多个图像在不同窗口时，需使用figure, plot(x,y),如：
x=-10:0.1:10;
y1=x.^2-8;
y2=exp(x);
figure, plot(x,y1);
figure, plot(x,y2);
就可画出两个图像。gca与gcf只能修改最近那个图像。

figure('position',[left,bottom,width,height]);                        %改变图像位置、大小


当需要画多个图像在同一窗口时，需使用subplot(m,n,num)命令，m代表一个窗口有m行，n列，一共m*n个图像，num代表所画图像在第几个位置，1是在第一个位置，位置从左往右，自上而下数。

例子：t=0:0.1:2*pi;
x=3*cos(t);
y=sin(t);
subplot(2,2,1);
plot(x,y);
axis normal;               %
subplot(2,2,2);
plot(x,y);
axis square;               %代表图像坐标轴长宽度一致
subplot(2,2,3);
plot(x,y);
axis equal;                %代表图像xy轴单元格长度一致
subplot(2,2,4);
plot(x,y);
axis equal tight;          %坐标轴与图形相切

值得注意的是，四个图是一个图案，通过axis命令改变图像大小，而坐标轴不变，导致不同。...
并且，通过命令只能改变最后一个图。
